=head1 NAME

perldelta - what is new for perl v5.8.9

=head1 DESCRIPTION

This document describes differences between the 5.8.8 release and
the 5.8.9 release.

=head1 Incompatible Changes

There are no changes incompatible with 5.8.8.

=head1 Core Enhancements

Nicholas Clark allowed symbolic references to have embedded NULs. The new
public function C<get_cvn_flags> can be used in extensions if you have to
handle them.

It's now possible to call C<stat> and the C<-X> filestat operators on
dirhandles. When the situation is ambiguous, it favours the file handle
semantics. They also treat C<*FILE{IO}> filehandles like C<*FILE> filehandles.

=head1 Modules and Pragmata

=head2 New Modules

=over

=item *

C<Module::Pluggable> is a simple framework to create modules that accept
pluggable sub-modules. The bundled version is 3.6.

=back

=head2 Updated Modules

=over

=item *

C<AutoSplit> upgraded to 1.05

=item *

C<autouse> upgraded to version 1.06

=item *

C<B> upgraded from 1.09_01 to 1.19.

=over

=item *

consting and PMOP handling fixes.

=item *

export B_sub_generation(), B::NV::COP_SEQ_RANGE_LOW(),
B::NV::COP_SEQ_RANGE_HIGH(), B::NV::PARENT_PAD_INDEX(),
B::NV::PARENT_FAKELEX_FLAGS()

=item *

fix B::PV::PVBM. It was missing the last table entry before.

=item *

B::BM::PREVIOUS returns now U32, not U16.

=item *

add B::GV::isGV_with_GP() returning always TRUE

=item *

B::CV::START and B:CV::ROOT return now NULL on an XSUB,
B::CV::XSUB and B::CV::XSUBANY return 0 on a non-XSUB.

=item *

New type B::HE added with methods VAL, HASH, SVKEY_force

=back

=item *

B<B::Debug> upgraded to version 1.03

=item *

C<B::Deparse> upgraded to version 0.81

=item *

C<B::Lint> upgraded to version 1.09

=item *

C<B::Terse> upgraded to version 1.04

=item *

C<base> upgraded to version 2.08

=item *

C<Benchmark> upgraded to version 1.10

=item *

C<bignum> upgraded to 0.20

=item *

C<CGI> upgraded to version 3.28

=item *

C<CPAN> upgraded to version 1.9101

=item *

C<DB> upgraded to version 1.30

=over

=item *

Andreas J. Koenig contributed two functions to save and load the debugger
history.

=back

=item *

C<DB_File> upgraded to version 1.815

=item *

C<Devel::PPPort> upgraded to version 3.14_01

=item *

C<diagnostics> upgraded to version 1.16

=item *

C<Encode> upgraded to version 2.20

=item *

C<Exporter> upgraded to version 5.60

=item *

C<ExtUtils::Constant> upgraded to version 0.04

=item *

C<ExtUtils::MakeMaker> upgraded to version 6.32

=item *

C<Fatal> upgraded to version 1.05

=over

=item *

Allows to make fatal built-ins in CORE::GLOBAL.

=back

=item *

C<File::Glob> upgraded to version 1.06

=over

=item *

Fixes spurious results with brackets inside braces.

=back

=item *

C<FileCache> upgraded to version 1.07

=item *

C<libnet> upgraded to version 1.20

=item *

C<Math::BigFloat> upgraded to version 1.54

=item *

C<Math::BigInt> upgraded to version 1.82

=item *

C<Math::BigRat> upgraded to version 0.18

=item *

C<Pod::Html> upgraded to version 1.08

=item *

C<Pod::Perldoc> is now maintained by Hakim Cassimally (osfameron).

=item *

C<POSIX::remove> can removes empty directories.

=item *

L<SelfLoader> upgraded to version 1.10

=item *

L<Shell> upgraded to version 0.72

=item *

L<sigtrap> upgraded to version 1.04

=item *

C<Socket> upgraded to version 1.79

=over

=item *

This fixes an optimistic use of C<gethostbyname()>.

=back

=item *

C<Storable> upgraded to 2.16

=item *

C<Switch> upgraded to version 2.13

=item *

C<Test::Simple> upgraded to version 0.70

=item *

C<Text::ParseWords> upgraded to version 3.25

=item *

C<Text::Tabs> upgraded to version 2007.1117

=item *

C<Test::Harness> upgraded version to 2.64

=over

=item *

This made it able to handle newlines.

=back

=item *

C<Text::Wrap> upgraded to version 2006.1117

=item *

C<Tie::Memoize> upgraded to version 1.1

=over

=item *

Tie::Memoize::EXISTS now correctly caches its results.

=back

=item *

C<Time::gmtime> upgraded to version 1.03

=item *

C<Time::HiRes> upgraded to version 1.9707

=item *

C<threads> upgraded to 1.61

=item *

C<threads::shared> upgraded to version 1.11

=over

=item *

User locks are now stored in a safer manner.

=back

=item *

C<XSLoader> upgraded to version 0.08

=item *

C<XS::APItest> and C<XS::Typemap> are for internal use only and hence
no longer installed.

=back

=head1 Utility Changes

=head1 New Documentation

As usual, the documentation received its share of corrections, clarifications
and other nitfixes. More C<< X<...> >> tags were added for indexing.

L<perlunitut> is a tutorial written by Juerd Waalboer on Unicode-related
terminology and how to correctly handle Unicode in Perl scripts.

L<perlreguts> describe the internals of the regular expressions engine. It has
been contributed by Yves Orton.

=head1 Performance Enhancements

=over

=item *

The default since perl 5.000 has been for perl to create an empty scalar
with every new typeglob. The increased use of lexical variables means that
most are now unused. Thanks to Nicholas Clark's efforts, Perl can now be
compiled with C<-DPERL_DONT_CREATE_GVSV> to avoid creating these empty scalars.
This will significantly decrease the number of scalars allocated for all
configurations, and the number of scalars that need to be copied for ithread
creation. Whilst this option is binary compatible with existing perl
installations, it does change a long-standing assumption about the
internals, hence it is not enabled by default, as some third party code may
rely on the old behaviour.

We would recommend testing with this configuration on new deployments of
perl, particularly for multi-threaded servers, to see whether all third party
code is compatible with it, as this configuration may give useful performance
improvements. For existing installations we would not recommend changing to
this configuration unless thorough testing is performed before deployment.

=item *

Reblessing an object from a class that doesn't use overloads to one
that does (or vice versa) is now faster. (31996, 32019, 32025).

=item *

C<diagnostics> no longer uses C<$&>, which results in large speedups
for regexp matching in all code using it.

=item *

Regular expressions classes of a single character are now treated the same as
if the character had been used as a literal, meaning that code that uses
char-classes as an escaping mechanism will see a speedup. (Yves Orton)

=item *

Creating anonymous array and hash references (ie. C<[]> and C<{}>) now incurs
no more overhead than creating an anonymous list or hash. Nicholas Clark provid
changes with a saving of two ops and one stack push, measured as a 6.4% improve 

=back

=head1 Installation and Configuration Improvements

F<g++> support was tuned, especially for FreeBSD.

C<Configure> is now better at removing temporary files. Tom Callaway
(from RedHat) also contributed patches that completes the set of flags
passed to the compiler and the linker. Especially, C<-fPIC> is now
enabled on linux. It will also croak when your F</dev/null> isn't a device.

There are improved hints for DEC/OSF.

=head1 Selected Bug Fixes

=over 4

=item *

Overloading flags are now stored on the referent instead of the reference.
Previously taking a new, unrelated reference to an object could result in
the original (blessed) reference being able to access the overload while
the new reference could not.  (Test added in 32016).

=back

=head2 Smaller fixes

=over 4

=item *

It's now possible to overload C<eq> when using C<nomethod>.

=item *

The reference count of PerlIO file descriptors is now correctly handled.

=item *

On VMS, escaped dots will be preserved when converted to UNIX syntax.

=item *

L<B::Deparse> has been instructed on how to properly deparse C<print
readpipe $x, $y>.

=item *

C<keys %+> no longer throws an C<'ambiguous'> warning.

=item * 

C<index> works faster now if the search string is stored in UTF-8 but actually
fits into Latin-1.

=item * 

Reduced number of calls to C<getpeername> in L<IO::Socket> (29129).

=item *

C<chr(65535)> ought to be allowed in regexes.

=item *

Using C<#!perl -d> could trigger an assertion, which has been fixed (30075).

=item *

Don't stringify tied code references in C<@INC> when calling C<require>.
(30068)

=item *

Code references in C<@INC> report the correct file name when C<__FILE__> is
used (30068).

=item *

Width and precion in sprintf didn't handle wide characters correctly (30058).

=item *

List slices with indices out of range now work more consistently (30026).

=item *

The C<-s> switch on the shebang line is again capable of parsing options with
arguments of the form C<-foo=bar> (29865).

=back

=head2 Platform specific fixes

=head3 Windows and OS/2

=over 4

=item *

A build problem with specifying C<USE_MULTI> and C<USE_ITHREADS> but without
C<USE_IMP_SYS> has been fixed.

=back

=head1 New or Changed Diagnostics

=head2 Maximal count of pending signals (%s) exceeded

This new fatal error occurs when the perl process has to abort due to
too many pending signals, which is bound to prevent perl from being
able to handle further incoming signals safely.

=head2 Panic: attempt to call %s in %s

This new fatal error occurs when a file test operator is used that is 
not availble on the current platfom (25987).

=head2 Panic: attempt to call %s in %s

This new fatal error occurs when a file test operator is used that is 
not availble on the current platfom (25987).

=head2 Can't upgrade %s (%d) to %d

This error now reports the type of things that made the upgrade fail (27253).

=head1 Changed Internals

The new API function C<newSV_type> can be used to replace more efficiently the
common idiom

    sv = newSV(0);
    sv_upgrade(sv, type);

A C<sigbit> public function was added to test the sign of a NV. It maps to the
system one when available.

C<av_reify>, C<lex_end>, C<mod>, C<op_clear>, C<pop_return>,
C<qerror>, C<setdefout>, C<vivify_defelem> and C<yylex> are now
visible to perl core extensions. This was required by L<Data::Alias>.

C<set> magic on localizing/assigning to a magic variable will now only
trigger for I<container magics>, i.e. it will for C<%ENV> or C<%SIG>
but not for C<$#array>.

A lot of small improvents in the code base were made due to reports from
the Coverity static code analyzer.

=head1 New Tests

=over 4

=item *

Regression tests for anchored regexes using C<\s> that failed to set C<$&>
(30073).

=item * 

Regression tests for sprinf with 64 bit semantics (30058).

=item *

Tests for tainting and C<open> with C<|-> as second argument (30048).

=item *

C<exit> can now be called in expressions that the optimizer constant-folds
(29976).

=back

=head1 Known Problems

=head1 Platform Specific Problems

Ilya Zakharevich has added and documented several C<Window*> and
C<Clipbrd*> functions to C<OS2::Process>, and then bumped
C<OS2::REXX::DLL> to 1.03.

C<Win32> and C<Win32API> were moved from F<win32/> to F<ext/> and then
respectively updated to 0.27 by Jan Dubois and 0.1001 by Yitzchak
Scott-Thoennes. Jan Dubois also made so C<readdir()>, C<cwd()>, C<$^X> and
C<@INC> would use the alternate (short) filename if the long name is outside
the current codepage. The C<PATH> envirnoment variable now also uses ANSI
filenames. And then he added C<killpg()> support on C<MSWin32>.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://bugs.perl.org.  There may also be
information at http://www.perl.org, the Perl Home Page.

If you believe you have an unreported bug, please run the B<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.  You can browse and search
the Perl 5 bugs at http://bugs.perl.org/

=head1 SEE ALSO

The F<Changes> file for exhaustive details on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut

